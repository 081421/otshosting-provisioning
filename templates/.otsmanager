#!/bin/bash
alias start='systemctl --user start'
alias stop='systemctl --user stop'
alias status='systemctl --user status'
alias restart='systemctl --user restart'
alias enable='systemctl --user enable'
alias disable='systemctl --user disable'
alias log='journalctl --user --user-unit'
alias follow='journalctl --user -f --user-unit'
alias updatetfs='cd /home/otsmanager/forgottenserver && git pull && mkdir -p build && cd build && make clean && cmake .. && make && cd'
alias serverip=GetLocalIP
alias duedate=`echo date -d $(curl -m 1 -s https://spigu.net/api/otshosting/expires)`
function GetLocalIP()
{
   ip -4 -o addr show eth0 | egrep -o '([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}' | head -n 1
}
# https://transfer.sh/
function transfer() { if [ $# -eq 0 ]; then echo "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"; return 1; fi 
tmpfile=$( mktemp -t transferXXX ); if tty -s; then basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g'); curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile; else curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ; fi; cat $tmpfile; rm -f $tmpfile; }; alias transfer=transfer

expires=$(curl -m 1 -s https://spigu.net/api/otshosting/expires)

echo "===================   MySQL   ==================="
echo "    phpMyAdmin: http://$(GetLocalIP):3380"
echo "    Username: `cat ~/.my.cnf | sed -n -e '2{p;q}' | awk -F'=' '{ print $2 }'`"
echo "    Password: `cat ~/.my.cnf | sed -n -e '3{p;q}' | awk -F'=' '{ print $2 }'`"
echo -e '    You can execute \E[32;40mmysql'"\033[1m\033[0m commands without password."
echo "    Total size and location of MySQL backups: `du -hs /var/lib/automysqlbackup/`"
echo "    Put your website files in /home/otsmanager/www/public_html"
echo ""
echo "===================   TFS commands   ===================" 
echo " If you run TFS with the following commands, it will auto restart."
echo -e '  Enable auto-start on boot:  \E[32;40menable tfs'"\033[1m\033[0m"
echo -e ' Disable auto-start on boot:  \E[32;40mdisable tfs'"\033[1m\033[0m"
echo -e '                  Start TFS:  \E[32;40mstart tfs'"\033[1m\033[0m"
echo -e '                   Stop TFS:  \E[32;40mstop tfs'"\033[1m\033[0m"
echo -e '                Restart TFS:  \E[32;40mrestart tfs'"\033[1m\033[0m"
echo -e '        Check status of TFS:  \E[32;40mstatus tfs'"\033[1m\033[0m"
echo -e '          Show full TFS log:  \E[32;40mlog tfs'"\033[1m\033[0m (q to exit)"
echo -e '         Follow TFS console:  \E[32;40mfollow tfs'"\033[1m\033[0m (CTRL+C to stop)"
echo ""
echo "===================  Useful commands   ==================="
echo -e 'Update TFS to latest master:  \E[32;40updatetfs'"\033[1m\033[0m"
echo -e '      Show service due date:  \E[32;40duedate'"\033[1m\033[0m"
echo -e '             Show server IP:  \E[32;40serverip'"\033[1m\033[0m"
echo -e '               Share a file:  \E[32;40mtransfer path/to/file'"\033[1m\033[0m"

echo ""
if [ "not found" != "$expires" ]; then
    echo -e "\e[0;33mYour service expires on $(date -d $expires)\033[1m\033[0m"
fi
echo -n "Current TFS status: "
status tfs
