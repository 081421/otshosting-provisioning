#!/bin/bash
alias initctl='/sbin/initctl'
alias start='/sbin/start'
alias stop='/sbin/stop'
alias status='/sbin/status'
alias restart='/sbin/restart'
alias tfsautostarton='rm -f ~/.config/upstart/tfs.override'
alias tfsautostartoff='echo "manual" > ~/.config/upstart/tfs.override'
alias showtfslog='tail -f ~/.cache/upstart/tfs.log'
alias updatetfs='cd /home/otsmanager/forgottenserver; git pull; cd build; make clean; cmake ..; make; cd ../..'
alias whatismyip=GetLocalIP
export XDG_RUNTIME_DIR=/run/user/$(id -u)
export UPSTART_SESSION=`initctl list-sessions | awk -F' ' '{ print $2 }'`
function GetLocalIP()
{
   ip -4 -o addr show eth0 | egrep -o '([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}' | head -n 1
}

expires=$(curl -m 1 -s https://spigu.net/api/otshosting/expires)

echo "==========   MySQL  =========="
echo "    phpMyAdmin: http://$(GetLocalIP):3380"
echo "    Username: `cat ~/.my.cnf | sed -n -e '2{p;q}' | awk -F'=' '{ print $2 }'`"
echo "    Password: `cat ~/.my.cnf | sed -n -e '3{p;q}' | awk -F'=' '{ print $2 }'`"
echo -e '    You can execute \E[32;40mmysql'"\033[1m\033[0m commands without password."
echo "    Total size and location of MySQL backups: `du -hs /var/lib/automysqlbackup/`"
echo ""
echo "    Put your website files in /home/otsmanager/www/public_html"
echo ""
echo "                ===   Useful commands   ===" 
echo " Once you run TFS with the following command, it will auto restart."
echo -e ' Enable auto-start on boot:  \E[32;40mtfsautostarton'"\033[1m\033[0m"
echo -e 'Disable auto-start on boot:  \E[32;40mtfsautostartoff'"\033[1m\033[0m"
echo -e '                 Start TFS:  \E[32;40mstart tfs'"\033[1m\033[0m"
echo -e '                  Stop TFS:  \E[32;40mstop tfs'"\033[1m\033[0m"
echo -e '               Restart TFS:  \E[32;40mrestart tfs'"\033[1m\033[0m"
echo -e '       Check status of TFS:  \E[32;40mstatus tfs'"\033[1m\033[0m"
echo -e '       Monitor console log:  \E[32;40mshowtfslog'"\033[1m\033[0m (CTRL+C to stop)"
echo ""
if [ "not found" -ne "$expires" ]; then
    echo -e "\e[0;31mYour service expires on $(date -d $expires)\033[1m\033[0m"
fi
echo -n "Current TFS status: "
status tfs
